{"version":3,"file":"static/webpack/static/development/pages/index.js.c943614a42c2cd34ade1.hot-update.js","sources":["webpack:///./src/components/Project.js"],"sourcesContent":["import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\nimport activeOnHover from '../helpers/activeOnHover'\nimport preloadPicture from '../helpers/preloadPicture'\nimport activeShortlyWhenVisible from '../helpers/activeShortlyWhenVisible'\nimport compose from 'recompose/compose'\nimport { Link } from '@material-ui/core'\n\nconst styles = theme => ({\n  root: {\n    minHeight: 330,\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    transition: 'all .25s',\n    boxSizing: 'border-box',\n    padding: 10,\n  },\n  active: {\n    '& $background': {\n      opacity: 0.2,\n    },\n    '& $showOnHover': {\n      visibility: 'visible',\n    },\n  },\n  showOnHover: {\n    visibility: 'hidden',\n  },\n  background: {\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 1,\n    transition: 'all .25s',\n  },\n  body: {\n    flexGrow: 1,\n    textAlign: 'center',\n  },\n  openLink: {\n    '& i': {\n      fontSize: '1.8em',\n    },\n  },\n})\n\nconst Project = ({ classes, project, active, picture, onClick }) => (\n  <div\n    onClick={onClick}\n    className={classNames(classes.root, {\n      [classes.active]: active,\n      [classes.hasLink]: !!project.link,\n    })}\n  >\n    {picture && picture.indexOf('webm') > -1 ? (\n      <video\n        className={classes.background}\n        style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n        autoPlay\n        loop\n      >\n        <source src={picture} type=\"video/webm\" />\n      </video>\n    ) : (\n      <div\n        className={classes.background}\n        style={{ backgroundImage: `url(${picture})` }}\n      />\n    )}\n    <div className={classes.body}>\n      <Typography color=\"textPrimary\" variant=\"h3\">\n        {project.name}\n        <Typography color=\"textPrimary\" variant=\"body2\">\n          {project.tags\n            .replace(/!/g, '')\n            .split('\\n')\n            .map((item, key) => (\n              <span key={key}>\n                {item}\n                <br />\n              </span>\n            ))}\n        </Typography>\n      </Typography>\n      <Typography\n        color=\"textPrimary\"\n        className={classNames(classes.showOnHover)}\n      >\n        {project.description\n          .replace(/!/g, '')\n          .split('\\n')\n          .map((item, key) => (\n            <span key={key}>\n              {item}\n              <br />\n            </span>\n          ))}\n      </Typography>\n    </div>\n    {project.link && (\n      <Button\n        href={project.link}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n        className={classNames(classes.openLink, classes.showOnHover)}\n      >\n        <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n      </Button>\n    )}\n  </div>\n)\n\n// export default compose(\n//   withStyles(styles),\n//   preloadPicture,\n//   activeShortlyWhenVisible,\n//   activeOnHover\n// )(Project)\n\nconst useStyles = makeStyles(theme => ({\n  artwork: {\n    position: 'relative',\n    minHeight: 200,\n  },\n  background: {\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 1,\n    transition: 'all .25s',\n  },\n}))\nconst Project2 = ({ project, picture, flip }) => {\n  const classes = useStyles()\n  return (\n    <Box my={12}>\n      <Grid container>\n        <Grid item xs={12} md={4} className={classes.artwork}>\n          {picture && picture.indexOf('webm') > -1 ? (\n            <video\n              className={classes.background}\n              style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n              autoPlay\n              loop\n            >\n              <source src={picture} type=\"video/webm\" />\n            </video>\n          ) : (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: `url(${picture})` }}\n            />\n          )}\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Box ml={6}>\n            <Typography variant=\"h4\" gutterBottom color=\"textPrimary\">\n              {project.name}\n            </Typography>\n            <Typography gutterBottom color=\"textPrimary\">\n              {project.description.split('\\n').map((item, key) => (\n                <span key={key}>\n                  {item}\n                  <br />\n                </span>\n              ))}\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\n              {project.tags.replace(/!/g, '')}\n            </Typography>\n            {project.link && (\n              <Link\n                href={project.link}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                // className={classNames(classes.openLink, classes.showOnHover)}\n              >\n                See more{' '}\n                <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n              </Link>\n            )}\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default preloadPicture(Project2)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AADA;AAtCA;AAAA;AACA;AA4CA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AASA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAUA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5DA;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AALA;AAAA;AACA;AAiBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}